@using Chatable.Data.Entitles.Model;
@using Chatable.Data.Entitles;
@using System.Globalization;
@using System.Net.Http;
@using Newtonsoft.Json;

@inject IDialogService DialogService
@inject HttpClient _http

<MudDialog class="custom-dialog-content">
    <DialogContent>
            @if (currentUser == null)
            {
                <MudProgressCircular Indeterminate="true"></MudProgressCircular>
            }
            else
            {
             
                <div class="content">
                        <div Class="photos">
                            <MudImage Src="@Constant.defaultBg" Alt="Ảnh nền" Height="150" Style="width: 100%; object-fit: cover;"></MudImage>
                            <MudAvatar Style="height:74px; width:74px; border: 2px solid #fff; position: absolute; left: 50%; transform: translateX(-50%); margin-top: 110px;">
                                <MudImage Src="@currentUser.Avatar"></MudImage>
                            </MudAvatar>
                            <MudIconButton Icon="@Icons.Material.Filled.CameraAlt" Style="position: absolute; width: 15px; height:12px; left: 57%; margin-top: 160px;" />
                            <p style=" position: absolute;  left: 50%; margin-top: 35px; transform: translateX(-50%); font-size: 17px; font-weight: 500;">@currentUser.UserName</p>
                        </div>

                        <div class="infor">
                            <p style=" font-size: 15px; font-weight: 500;"> Thông tin cá nhân </p>
                            <div style="margin-top: 10px;">
                                <MudText>Tên hiển thi</MudText>
                                <MudTextField @bind-Value="@currentUser.UserName"
                                              Variant="Variant.Outlined" Margin="Margin.Dense"
                                              Style="background-color: white; border-radius: 8px; border-width: 2px; border-color: #ECEDF0"
                                              HelperText="Sử dụng tên thật để bạn bè dễ dàng nhận diện hơn"></MudTextField>
                                <MudDivider></MudDivider>
                            </div>

                            <div style="margin-top: 10px;">
                                <MudText>Họ và tên</MudText>
                                <MudTextField @bind-Value="@currentUser.Name"
                                              Variant="Variant.Outlined" Margin="Margin.Dense"
                                              Style=" background-color:white; border-radius: 8px; border-width: 2px; border-color: #ECEDF0"></MudTextField>
                            </div>
                            <div style="margin-top: 10px;">
                                <MudText>Email</MudText>
                                <MudTextField @bind-Value="@currentUser.Email"
                                              Variant="Variant.Outlined" Margin="Margin.Dense"
                                              Style="background-color: white; border-radius: 8px; border-width: 2px;border-color: #ECEDF0"></MudTextField>

                            </div>
                            <div style="margin-top: 10px">
                                <MudText>Giới tính</MudText>

                                <MudRadioGroup @bind-SelectedOption="IsMale" Class="center-radio-group" Style="background-color: white!important; margin-top: 10px">
                                    <MudRadio Option="true" Color="Color.Primary" Dense="true" Class="radio-custom" Style="margin-left: 60px">Nam</MudRadio>
                                    <MudRadio Option="false" Color="Color.Primary" Dense="true" Class="radio-custom" Style="margin-left: 60px">Nữ</MudRadio>
                                </MudRadioGroup>

                            </div>
                            <div style="margin-top: 10px; background-color: white">
                                <MudText>Ngày sinh</MudText>

                                <MudDatePicker MaxDate="DateTime.Now"
                                               Variant="Variant.Outlined"
                                               Style="background-color: white; border-radius:8px; border-width: 2px; border-color: #ECEDF0 "
                                               @bind-Date="@dob" DisableToolbar="true" DateFormat="dd.MM.yyyy"
                                               Class="top0" />

                            </div>
                            <MudDivider></MudDivider>
                        </div>
                    </div>
           
            }
    </DialogContent>
    <DialogActions >
        <div class="bottom-right-button">
           
            <MudButton Color="Color.Primary" OnClick="Cancel" Style="margin-right: 20px; background-color: #F5F5F5; color: black">
                Hủy
            </MudButton>
            <MudButton Color="Color.Primary" OnClick="SaveChange" Class="btn-save btn-save-hover" >
                <MudText Style="color: white"> Cập nhập</MudText>
            </MudButton>
        </div>
    </DialogActions>
</MudDialog>
<style>
    .mud-dialog .mud-dialog-content
    {
        padding: 8px 0;
    }

    .dialog-edit-profile
    {
        height: 700px;
    }
    .custom-dialog-content {
        padding 0;
        margin: 0;
        align-content: center;
        height: 700px;
    }

    .nopadding {
        padding: 0;
    }
    .content {
        height: 500px;
        width: 450px;
        overflow-y: scroll;
    }
    .photos {
        position: relative;
        width: 100%;
        text-align: center;
    }
    .infor {
        margin-top: 70px;
        height: 300px;
        max-height: 300px; 
        padding: 10px 20px;
    }

    .bottom-right-button {
        position: fixed;
        bottom: 0;
        right: 0;
        margin-bottom: 10px;
        margin-right: 10px;
        display: flex;
        width: 100%;
        align-items: center;
        justify-content: end;

    }
    .btn-save {
        color: white;
        background-color: #3559E0;
    }
    .btn-save-hover:hover{
        background-color :#4CB9E7;
    }
    .mud-input-control-input-container 
    {
        background-color: white !important;
    }
</style>

@code {
    public class ApiResponse<T>
    {
        public bool Success { get; set; }
        public string Message { get; set; }
        public T Data { get; set; }
    }
}

@code {
    User currentUser;

    //thong tin hien thi
    private string UserName { get; set; }
    private string FullName { get; set; }
    private string Email { get; set; }
    private bool IsMale;
    DateTime ?dob; 
    protected override void OnInitialized()
    {
        LoadProfile();
        if (currentUser!=null)
        {
            if (currentUser.Gender == "male")
            {
                IsMale = true;
            }
            else
            {
                IsMale = false;
            }
            dob = currentUser.DateOfBirth;
        }
    }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    private void SaveChange()
    {  
        //call api save change
        MudDialog.CancelAll();
    }
    private async Task<User> GetCurUser()
    {
        User curUser = new User();
        try
        {
            var response = await _http.GetAsync("https://localhost:7124/api/v1/User/CurrentUser");

            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                if (responseContent != null)
                {
                    ApiResponse<User> apiResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<ApiResponse<User>>(responseContent);
                    curUser = apiResponse.Data;
                    return curUser;
                }
                return null;

            }
            return null;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            return null;
        }
    }

    private async Task LoadProfile()
    {
        currentUser = await GetCurUser();
        StateHasChanged();
    }
}
