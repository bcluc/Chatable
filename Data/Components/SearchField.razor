@using Chatable.Data.Components;
@using Chatable.Data.Entitles;
@using Chatable.Data.Entitles.Model;
@using Chatable.Data.Entitles.Respond;
@using Microsoft.AspNetCore.SignalR.Client;
@using System.Net.Http.Headers;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net.Http;
@using Newtonsoft.Json;

@inject Blazored.LocalStorage.ILocalStorageService _localStorageService
@inject HttpClient _http
@inject NavigationManager _navigationManager
@inject IJSRuntime JSRuntime
@inject IDialogService DialogService
@inject IHttpClientFactory ClientFactory

<style>
    .top_bar {
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 16px;
    }

    /* Thay đổi border-radius của Outlined MudTextField */
    .mud-input-outlined-border {
        border-radius: 8px !important;
    }

    /* Thay đổi margin-top mặc định 6px Outlined MudTextField thành 0px*/
    .mud-input-control {
        margin-top: 0px;
    }

    .mud-input.mud-input-outlined.mud-input-adorned-start {
        padding-left: 8px;
        padding-inline-start: 8px;
        padding-inline-end: unset;
    }

    .mud-input > input.mud-input-root-outlined.mud-input-root-adorned-start, div.mud-input-slot.mud-input-root-outlined.mud-input-root-adorned-start {
        padding-left: 0;
        padding-inline-start: 0;
        padding-inline-end: 14px;
    }

    .mud-input > input.mud-input-root-outlined, div.mud-input-slot.mud-input-root-outlined {
        padding: 9.5px 14px;
    }

    .mud-input-outlined-border {
        border: none !important;
    }

    .mud-input-control-input-container {
        background-color: #ECEDF0 !important;
        border-radius: 8px !important;
    }

</style>

<div class="top_bar">
    <MudAutocomplete Placeholder="Tìm kiếm" T="string" @bind-Value="searchText" SearchFunc="@Search"
        Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Variant="Variant.Outlined" />

    <MudIconButton Variant="Variant.Filled" DisableElevation="true" Style="padding: 9px; border-radius: 8px; background-color: #ECEDF0" Class="mx-2">
        <i class="fa-solid fa-user-plus fa-lg"></i>
    </MudIconButton>
    <MudIconButton Icon="@Icons.Material.Filled.GroupAdd" OnClick="OpenAddGroupDialog" Variant="Variant.Filled" DisableElevation="true"
        Style="padding: 7px; border-radius: 8px; background-color: #ECEDF0">

    </MudIconButton>

</div>
@code {
    private string searchText;
    private IList<String> states = Constant.states;
    private async Task<IEnumerable<string>> Search(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        // return chat room
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private void OpenAddGroupDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true };
        DialogService.Show<Dialog.AddGroup>("Tạo nhóm", options);
    }
}
