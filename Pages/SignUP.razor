@page "/signUp"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http
@using System.Net.Http.Json

<div class="title">
    @{
        <h1>Chatable</h1>
        <h2>Hãy Tạo tài khoản mới</h2>
    }
</div>
<div Class="body">
    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard Style="width:350px">
            <MudCardContent>
                <MudTextField Label="First name" HelperText="Max. 8 characters"
                              @bind-Value="model.Username" For="@(() => model.Username)" />
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="model.Email" For="@(() => model.Email)" />
                <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                              @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                              @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Đăng ký</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
</div>
<style>
    .title {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 30px 0;
    }

    .body {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 50px 0;
    }
</style>
@code {
    RegisterAccountForm model = new RegisterAccountForm();
    bool success;

    [Inject]
    private HttpClient HttpClient { get; set; }

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Tên người dùng không quá 8 kí tự")]
        public string Username { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Mật khẩu có ít nhất 8 kí tự", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }

    private async Task OnValidSubmit(EditContext context)
    {
        var response = await HttpClient.PostAsJsonAsync("api/v1/Auth/register", model);

        if (response.IsSuccessStatusCode)
        {
            success = true;
        }
        else
        {
            success = false;
            //erro
        }

        StateHasChanged();

    }

}